// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/main/proto/cassandra-backup.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OperationStatus int32

const (
	OperationStatus_UNKNOWN   OperationStatus = 0
	OperationStatus_STARTED   OperationStatus = 1
	OperationStatus_SUCCEEDED OperationStatus = 2
	OperationStatus_FAILED    OperationStatus = 3
)

var OperationStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "STARTED",
	2: "SUCCEEDED",
	3: "FAILED",
}

var OperationStatus_value = map[string]int32{
	"UNKNOWN":   0,
	"STARTED":   1,
	"SUCCEEDED": 2,
	"FAILED":    3,
}

func (x OperationStatus) String() string {
	return proto.EnumName(OperationStatus_name, int32(x))
}

func (OperationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{0}
}

type NodeInfo_NodeStatus int32

const (
	NodeInfo_LIVE        NodeInfo_NodeStatus = 0
	NodeInfo_LEAVING     NodeInfo_NodeStatus = 1
	NodeInfo_MOVING      NodeInfo_NodeStatus = 2
	NodeInfo_JOINING     NodeInfo_NodeStatus = 3
	NodeInfo_UNREACHABLE NodeInfo_NodeStatus = 4
)

var NodeInfo_NodeStatus_name = map[int32]string{
	0: "LIVE",
	1: "LEAVING",
	2: "MOVING",
	3: "JOINING",
	4: "UNREACHABLE",
}

var NodeInfo_NodeStatus_value = map[string]int32{
	"LIVE":        0,
	"LEAVING":     1,
	"MOVING":      2,
	"JOINING":     3,
	"UNREACHABLE": 4,
}

func (x NodeInfo_NodeStatus) String() string {
	return proto.EnumName(NodeInfo_NodeStatus_name, int32(x))
}

func (NodeInfo_NodeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{7, 0}
}

type NodeListingRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeListingRequest) Reset()         { *m = NodeListingRequest{} }
func (m *NodeListingRequest) String() string { return proto.CompactTextString(m) }
func (*NodeListingRequest) ProtoMessage()    {}
func (*NodeListingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{0}
}

func (m *NodeListingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeListingRequest.Unmarshal(m, b)
}
func (m *NodeListingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeListingRequest.Marshal(b, m, deterministic)
}
func (m *NodeListingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeListingRequest.Merge(m, src)
}
func (m *NodeListingRequest) XXX_Size() int {
	return xxx_messageInfo_NodeListingRequest.Size(m)
}
func (m *NodeListingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeListingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeListingRequest proto.InternalMessageInfo

func (m *NodeListingRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type BackupListingRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	TargetIp             string   `protobuf:"bytes,2,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	N                    uint32   `protobuf:"varint,3,opt,name=n,proto3" json:"n,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupListingRequest) Reset()         { *m = BackupListingRequest{} }
func (m *BackupListingRequest) String() string { return proto.CompactTextString(m) }
func (*BackupListingRequest) ProtoMessage()    {}
func (*BackupListingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{1}
}

func (m *BackupListingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupListingRequest.Unmarshal(m, b)
}
func (m *BackupListingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupListingRequest.Marshal(b, m, deterministic)
}
func (m *BackupListingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupListingRequest.Merge(m, src)
}
func (m *BackupListingRequest) XXX_Size() int {
	return xxx_messageInfo_BackupListingRequest.Size(m)
}
func (m *BackupListingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupListingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupListingRequest proto.InternalMessageInfo

func (m *BackupListingRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *BackupListingRequest) GetTargetIp() string {
	if m != nil {
		return m.TargetIp
	}
	return ""
}

func (m *BackupListingRequest) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

type BackupRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	BackupType           uint32   `protobuf:"varint,2,opt,name=backup_type,json=backupType,proto3" json:"backup_type,omitempty"`
	TargetIp             string   `protobuf:"bytes,3,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupRequest) Reset()         { *m = BackupRequest{} }
func (m *BackupRequest) String() string { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()    {}
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{2}
}

func (m *BackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupRequest.Unmarshal(m, b)
}
func (m *BackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupRequest.Marshal(b, m, deterministic)
}
func (m *BackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupRequest.Merge(m, src)
}
func (m *BackupRequest) XXX_Size() int {
	return xxx_messageInfo_BackupRequest.Size(m)
}
func (m *BackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupRequest proto.InternalMessageInfo

func (m *BackupRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *BackupRequest) GetBackupType() uint32 {
	if m != nil {
		return m.BackupType
	}
	return 0
}

func (m *BackupRequest) GetTargetIp() string {
	if m != nil {
		return m.TargetIp
	}
	return ""
}

type RestoreRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	BackupId             string   `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	RestoreType          uint32   `protobuf:"varint,3,opt,name=restore_type,json=restoreType,proto3" json:"restore_type,omitempty"`
	TargetIps            []string `protobuf:"bytes,4,rep,name=target_ips,json=targetIps,proto3" json:"target_ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreRequest) Reset()         { *m = RestoreRequest{} }
func (m *RestoreRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreRequest) ProtoMessage()    {}
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{3}
}

func (m *RestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreRequest.Unmarshal(m, b)
}
func (m *RestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreRequest.Marshal(b, m, deterministic)
}
func (m *RestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreRequest.Merge(m, src)
}
func (m *RestoreRequest) XXX_Size() int {
	return xxx_messageInfo_RestoreRequest.Size(m)
}
func (m *RestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreRequest proto.InternalMessageInfo

func (m *RestoreRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *RestoreRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *RestoreRequest) GetRestoreType() uint32 {
	if m != nil {
		return m.RestoreType
	}
	return 0
}

func (m *RestoreRequest) GetTargetIps() []string {
	if m != nil {
		return m.TargetIps
	}
	return nil
}

type StatusUpdateRequest struct {
	ClusterId            string          `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	TargetIp             string          `protobuf:"bytes,2,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	BackupId             string          `protobuf:"bytes,3,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	Status               OperationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=rpc.OperationStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatusUpdateRequest) Reset()         { *m = StatusUpdateRequest{} }
func (m *StatusUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*StatusUpdateRequest) ProtoMessage()    {}
func (*StatusUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{4}
}

func (m *StatusUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusUpdateRequest.Unmarshal(m, b)
}
func (m *StatusUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusUpdateRequest.Marshal(b, m, deterministic)
}
func (m *StatusUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusUpdateRequest.Merge(m, src)
}
func (m *StatusUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_StatusUpdateRequest.Size(m)
}
func (m *StatusUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusUpdateRequest proto.InternalMessageInfo

func (m *StatusUpdateRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *StatusUpdateRequest) GetTargetIp() string {
	if m != nil {
		return m.TargetIp
	}
	return ""
}

func (m *StatusUpdateRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *StatusUpdateRequest) GetStatus() OperationStatus {
	if m != nil {
		return m.Status
	}
	return OperationStatus_UNKNOWN
}

type ClusterListingResponse struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterListingResponse) Reset()         { *m = ClusterListingResponse{} }
func (m *ClusterListingResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterListingResponse) ProtoMessage()    {}
func (*ClusterListingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{5}
}

func (m *ClusterListingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterListingResponse.Unmarshal(m, b)
}
func (m *ClusterListingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterListingResponse.Marshal(b, m, deterministic)
}
func (m *ClusterListingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterListingResponse.Merge(m, src)
}
func (m *ClusterListingResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterListingResponse.Size(m)
}
func (m *ClusterListingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterListingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterListingResponse proto.InternalMessageInfo

func (m *ClusterListingResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

type NodeListingResponse struct {
	Info                 []*NodeInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NodeListingResponse) Reset()         { *m = NodeListingResponse{} }
func (m *NodeListingResponse) String() string { return proto.CompactTextString(m) }
func (*NodeListingResponse) ProtoMessage()    {}
func (*NodeListingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{6}
}

func (m *NodeListingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeListingResponse.Unmarshal(m, b)
}
func (m *NodeListingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeListingResponse.Marshal(b, m, deterministic)
}
func (m *NodeListingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeListingResponse.Merge(m, src)
}
func (m *NodeListingResponse) XXX_Size() int {
	return xxx_messageInfo_NodeListingResponse.Size(m)
}
func (m *NodeListingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeListingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeListingResponse proto.InternalMessageInfo

func (m *NodeListingResponse) GetInfo() []*NodeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type NodeInfo struct {
	Ip                   string              `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Status               NodeInfo_NodeStatus `protobuf:"varint,2,opt,name=status,proto3,enum=rpc.NodeInfo_NodeStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{7}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *NodeInfo) GetStatus() NodeInfo_NodeStatus {
	if m != nil {
		return m.Status
	}
	return NodeInfo_LIVE
}

type BackupResponse struct {
	Status               OperationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rpc.OperationStatus" json:"status,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	BackupId             string          `protobuf:"bytes,3,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BackupResponse) Reset()         { *m = BackupResponse{} }
func (m *BackupResponse) String() string { return proto.CompactTextString(m) }
func (*BackupResponse) ProtoMessage()    {}
func (*BackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{8}
}

func (m *BackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupResponse.Unmarshal(m, b)
}
func (m *BackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupResponse.Marshal(b, m, deterministic)
}
func (m *BackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupResponse.Merge(m, src)
}
func (m *BackupResponse) XXX_Size() int {
	return xxx_messageInfo_BackupResponse.Size(m)
}
func (m *BackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupResponse proto.InternalMessageInfo

func (m *BackupResponse) GetStatus() OperationStatus {
	if m != nil {
		return m.Status
	}
	return OperationStatus_UNKNOWN
}

func (m *BackupResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BackupResponse) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

type RestoreResponse struct {
	Status               OperationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rpc.OperationStatus" json:"status,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RestoreResponse) Reset()         { *m = RestoreResponse{} }
func (m *RestoreResponse) String() string { return proto.CompactTextString(m) }
func (*RestoreResponse) ProtoMessage()    {}
func (*RestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{9}
}

func (m *RestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreResponse.Unmarshal(m, b)
}
func (m *RestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreResponse.Marshal(b, m, deterministic)
}
func (m *RestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreResponse.Merge(m, src)
}
func (m *RestoreResponse) XXX_Size() int {
	return xxx_messageInfo_RestoreResponse.Size(m)
}
func (m *RestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreResponse proto.InternalMessageInfo

func (m *RestoreResponse) GetStatus() OperationStatus {
	if m != nil {
		return m.Status
	}
	return OperationStatus_UNKNOWN
}

func (m *RestoreResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type BackupListingResponse struct {
	Entry                []*BackupEntry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BackupListingResponse) Reset()         { *m = BackupListingResponse{} }
func (m *BackupListingResponse) String() string { return proto.CompactTextString(m) }
func (*BackupListingResponse) ProtoMessage()    {}
func (*BackupListingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{10}
}

func (m *BackupListingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupListingResponse.Unmarshal(m, b)
}
func (m *BackupListingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupListingResponse.Marshal(b, m, deterministic)
}
func (m *BackupListingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupListingResponse.Merge(m, src)
}
func (m *BackupListingResponse) XXX_Size() int {
	return xxx_messageInfo_BackupListingResponse.Size(m)
}
func (m *BackupListingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupListingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupListingResponse proto.InternalMessageInfo

func (m *BackupListingResponse) GetEntry() []*BackupEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type BackupEntry struct {
	ClusterId            string               `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	TargetIp             string               `protobuf:"bytes,2,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	BackupType           uint32               `protobuf:"varint,3,opt,name=backup_type,json=backupType,proto3" json:"backup_type,omitempty"`
	BackupId             string               `protobuf:"bytes,4,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	Status               OperationStatus      `protobuf:"varint,5,opt,name=status,proto3,enum=rpc.OperationStatus" json:"status,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BackupEntry) Reset()         { *m = BackupEntry{} }
func (m *BackupEntry) String() string { return proto.CompactTextString(m) }
func (*BackupEntry) ProtoMessage()    {}
func (*BackupEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e42e29e62bf55da, []int{11}
}

func (m *BackupEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupEntry.Unmarshal(m, b)
}
func (m *BackupEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupEntry.Marshal(b, m, deterministic)
}
func (m *BackupEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupEntry.Merge(m, src)
}
func (m *BackupEntry) XXX_Size() int {
	return xxx_messageInfo_BackupEntry.Size(m)
}
func (m *BackupEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupEntry.DiscardUnknown(m)
}

var xxx_messageInfo_BackupEntry proto.InternalMessageInfo

func (m *BackupEntry) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *BackupEntry) GetTargetIp() string {
	if m != nil {
		return m.TargetIp
	}
	return ""
}

func (m *BackupEntry) GetBackupType() uint32 {
	if m != nil {
		return m.BackupType
	}
	return 0
}

func (m *BackupEntry) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *BackupEntry) GetStatus() OperationStatus {
	if m != nil {
		return m.Status
	}
	return OperationStatus_UNKNOWN
}

func (m *BackupEntry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterEnum("rpc.OperationStatus", OperationStatus_name, OperationStatus_value)
	proto.RegisterEnum("rpc.NodeInfo_NodeStatus", NodeInfo_NodeStatus_name, NodeInfo_NodeStatus_value)
	proto.RegisterType((*NodeListingRequest)(nil), "rpc.NodeListingRequest")
	proto.RegisterType((*BackupListingRequest)(nil), "rpc.BackupListingRequest")
	proto.RegisterType((*BackupRequest)(nil), "rpc.BackupRequest")
	proto.RegisterType((*RestoreRequest)(nil), "rpc.RestoreRequest")
	proto.RegisterType((*StatusUpdateRequest)(nil), "rpc.StatusUpdateRequest")
	proto.RegisterType((*ClusterListingResponse)(nil), "rpc.ClusterListingResponse")
	proto.RegisterType((*NodeListingResponse)(nil), "rpc.NodeListingResponse")
	proto.RegisterType((*NodeInfo)(nil), "rpc.NodeInfo")
	proto.RegisterType((*BackupResponse)(nil), "rpc.BackupResponse")
	proto.RegisterType((*RestoreResponse)(nil), "rpc.RestoreResponse")
	proto.RegisterType((*BackupListingResponse)(nil), "rpc.BackupListingResponse")
	proto.RegisterType((*BackupEntry)(nil), "rpc.BackupEntry")
}

func init() {
	proto.RegisterFile("src/main/proto/cassandra-backup.proto", fileDescriptor_8e42e29e62bf55da)
}

var fileDescriptor_8e42e29e62bf55da = []byte{
	// 885 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x51, 0x73, 0xdb, 0x44,
	0x10, 0xe6, 0x2c, 0x27, 0x8d, 0x57, 0xb6, 0xe3, 0xb9, 0x98, 0xa2, 0x2a, 0x74, 0xe2, 0x88, 0xa1,
	0x13, 0x32, 0xad, 0x05, 0x2e, 0x33, 0xa4, 0x7d, 0xe9, 0x38, 0x8e, 0x0a, 0x02, 0xd7, 0xe9, 0x28,
	0x4e, 0x99, 0x3e, 0x85, 0x8b, 0x7c, 0x31, 0x9a, 0xc6, 0x92, 0xd0, 0x9d, 0x61, 0x32, 0x9d, 0x3e,
	0xc0, 0x0f, 0xe0, 0x85, 0x47, 0xe0, 0x57, 0xf1, 0x17, 0x78, 0xe7, 0x2f, 0x30, 0xba, 0x3b, 0xc9,
	0x91, 0x92, 0x90, 0x74, 0xe8, 0x9b, 0x6e, 0x77, 0x6f, 0xbf, 0x6f, 0xf7, 0xbe, 0xbd, 0x13, 0x7c,
	0xcc, 0x12, 0xdf, 0x9e, 0x91, 0x20, 0xb4, 0xe3, 0x24, 0xe2, 0x91, 0xed, 0x13, 0xc6, 0x48, 0x38,
	0x49, 0xc8, 0x83, 0x63, 0xe2, 0xbf, 0x9a, 0xc7, 0x5d, 0x61, 0xc6, 0x5a, 0x12, 0xfb, 0xe6, 0x87,
	0xd3, 0x28, 0x9a, 0x9e, 0x52, 0x9b, 0xc4, 0x81, 0x4d, 0xc2, 0x30, 0xe2, 0x84, 0x07, 0x51, 0xc8,
	0x64, 0x88, 0xb9, 0xae, 0xbc, 0x62, 0x75, 0x3c, 0x3f, 0xb1, 0xe9, 0x2c, 0xe6, 0x67, 0xca, 0xb9,
	0x51, 0x76, 0xf2, 0x60, 0x46, 0x19, 0x27, 0x33, 0x05, 0x60, 0x3d, 0x04, 0x3c, 0x8a, 0x26, 0x74,
	0x18, 0x30, 0x1e, 0x84, 0x53, 0x8f, 0xfe, 0x30, 0xa7, 0x8c, 0xe3, 0xbb, 0x00, 0xfe, 0xe9, 0x9c,
	0x71, 0x9a, 0x1c, 0x05, 0x13, 0x03, 0x75, 0xd0, 0x56, 0xcd, 0xab, 0x29, 0x8b, 0x3b, 0xb1, 0xbe,
	0x83, 0xf6, 0xae, 0x60, 0xf9, 0x56, 0xdb, 0xf0, 0x3a, 0xd4, 0x38, 0x49, 0xa6, 0x94, 0x1f, 0x05,
	0xb1, 0x51, 0x11, 0xde, 0x15, 0x69, 0x70, 0x63, 0x5c, 0x07, 0x14, 0x1a, 0x5a, 0x07, 0x6d, 0x35,
	0x3c, 0x14, 0x5a, 0xa7, 0xd0, 0x90, 0x08, 0x37, 0x4c, 0xbd, 0x01, 0xba, 0xec, 0xdb, 0x11, 0x3f,
	0x8b, 0xa9, 0x48, 0xde, 0xf0, 0x40, 0x9a, 0xc6, 0x67, 0x31, 0x2d, 0x62, 0x6b, 0x45, 0x6c, 0xeb,
	0x57, 0x04, 0x4d, 0x8f, 0x32, 0x1e, 0x25, 0xf4, 0xe6, 0xa5, 0x28, 0xbc, 0x60, 0x92, 0x95, 0x22,
	0x0d, 0xee, 0x04, 0x6f, 0x42, 0x3d, 0x91, 0xd9, 0x24, 0x1b, 0x59, 0x95, 0xae, 0x6c, 0x82, 0xce,
	0x5d, 0x80, 0x9c, 0x0e, 0x33, 0xaa, 0x1d, 0x2d, 0x4d, 0x9f, 0xf1, 0x61, 0xd6, 0x1f, 0x08, 0xd6,
	0x0e, 0x38, 0xe1, 0x73, 0x76, 0x18, 0x4f, 0x08, 0xa7, 0xef, 0xa2, 0xc1, 0x05, 0xca, 0x5a, 0x89,
	0xf2, 0x7d, 0x58, 0x66, 0x02, 0xcf, 0xa8, 0x76, 0xd0, 0x56, 0xb3, 0xd7, 0xee, 0x26, 0xb1, 0xdf,
	0xdd, 0x8f, 0x69, 0x22, 0xb4, 0x26, 0xb9, 0x78, 0x2a, 0xc6, 0xfa, 0x02, 0x6e, 0x0f, 0x24, 0x68,
	0x2e, 0x00, 0x16, 0x47, 0x21, 0xa3, 0x17, 0x08, 0x6a, 0x45, 0xe1, 0xec, 0xc0, 0x5a, 0x41, 0x6d,
	0x6a, 0xd7, 0x26, 0x54, 0x83, 0xf0, 0x24, 0x12, 0xf1, 0x7a, 0xaf, 0x21, 0xb0, 0xd3, 0x38, 0x37,
	0x3c, 0x89, 0x3c, 0xe1, 0xb2, 0x7e, 0x47, 0xb0, 0x92, 0x99, 0x70, 0x13, 0x2a, 0x41, 0xac, 0xca,
	0xaf, 0x04, 0x31, 0xfe, 0x34, 0x67, 0x5f, 0x11, 0xec, 0x8d, 0x42, 0x06, 0xf1, 0x51, 0xaa, 0xe0,
	0x19, 0xc0, 0xc2, 0x8a, 0x57, 0xa0, 0x3a, 0x74, 0x5f, 0x38, 0xad, 0xf7, 0xb0, 0x0e, 0xb7, 0x86,
	0x4e, 0xff, 0x85, 0x3b, 0xfa, 0xb2, 0x85, 0x30, 0xc0, 0xf2, 0xb3, 0x7d, 0xf1, 0x5d, 0x49, 0x1d,
	0x5f, 0xef, 0xbb, 0xa3, 0x74, 0xa1, 0xe1, 0x55, 0xd0, 0x0f, 0x47, 0x9e, 0xd3, 0x1f, 0x7c, 0xd5,
	0xdf, 0x1d, 0x3a, 0xad, 0xaa, 0x35, 0x87, 0x66, 0x26, 0x57, 0x55, 0xd2, 0xa2, 0xa1, 0xe8, 0xfa,
	0x86, 0x62, 0x03, 0x6e, 0xcd, 0x28, 0x63, 0x64, 0x4a, 0xd5, 0xb1, 0x65, 0xcb, 0xff, 0x3c, 0x35,
	0xeb, 0x25, 0xac, 0xe6, 0xb2, 0x7d, 0xb7, 0xb8, 0xd6, 0x13, 0x78, 0xbf, 0x34, 0xe2, 0x0a, 0xe0,
	0x1e, 0x2c, 0xd1, 0x90, 0x27, 0x67, 0xea, 0xb0, 0x5a, 0x22, 0xbf, 0x0c, 0x75, 0x52, 0xbb, 0x27,
	0xdd, 0xd6, 0x3f, 0x08, 0xf4, 0x73, 0xe6, 0xff, 0x25, 0xdd, 0xd2, 0x74, 0x6b, 0x97, 0x4d, 0xf7,
	0xa2, 0x4b, 0xd5, 0x2b, 0xb5, 0xbd, 0x74, 0x83, 0x96, 0xec, 0x40, 0x2d, 0xbf, 0x23, 0x8d, 0xe5,
	0x0e, 0xda, 0xd2, 0x7b, 0x66, 0x57, 0xde, 0xa2, 0xdd, 0xec, 0x16, 0xed, 0x8e, 0xb3, 0x08, 0x6f,
	0x11, 0xbc, 0xfd, 0x14, 0x56, 0x4b, 0x49, 0x53, 0xd5, 0x1c, 0x8e, 0xbe, 0x19, 0xed, 0x7f, 0x3b,
	0x92, 0xda, 0x3a, 0x18, 0xf7, 0xbd, 0xb1, 0xb3, 0xd7, 0x42, 0xb8, 0x01, 0xb5, 0x83, 0xc3, 0xc1,
	0xc0, 0x71, 0xf6, 0x9c, 0xbd, 0x56, 0x25, 0x95, 0xda, 0xd3, 0xbe, 0x3b, 0x74, 0xf6, 0x5a, 0x5a,
	0xef, 0xcf, 0x25, 0x58, 0x1d, 0x64, 0xcf, 0x81, 0x6c, 0x21, 0x7e, 0x09, 0xf5, 0x83, 0xef, 0xa3,
	0x9f, 0xd4, 0xd4, 0x31, 0x7c, 0xfb, 0x02, 0x25, 0x27, 0xbd, 0xf5, 0xcd, 0x75, 0x51, 0xdb, 0xe5,
	0xc3, 0x69, 0xb5, 0x7f, 0xf9, 0xeb, 0xef, 0xdf, 0x2a, 0x4d, 0x5c, 0xb7, 0x7f, 0xfc, 0xcc, 0xf6,
	0xb3, 0x54, 0x04, 0x6a, 0x69, 0x60, 0x3a, 0x0e, 0x0c, 0x7f, 0x90, 0x4f, 0x4e, 0xf1, 0x6a, 0x37,
	0x8d, 0x8b, 0x0e, 0x95, 0x75, 0x53, 0x64, 0x5d, 0xc7, 0x77, 0xce, 0x67, 0xb5, 0x5f, 0x2f, 0x0e,
	0xfb, 0x0d, 0x8e, 0x40, 0x4f, 0x77, 0xc9, 0x5a, 0x18, 0xbe, 0x73, 0x4e, 0x33, 0x25, 0x18, 0xf3,
	0x32, 0x97, 0x02, 0xfa, 0x44, 0x00, 0x7d, 0x84, 0x37, 0xaf, 0x04, 0xb2, 0x8f, 0x15, 0x82, 0x0f,
	0x30, 0x26, 0xaf, 0xa8, 0x6a, 0x1e, 0x3e, 0x97, 0x34, 0x03, 0x5a, 0x2b, 0xd8, 0x14, 0xc2, 0x7d,
	0x81, 0x70, 0xcf, 0xba, 0x1e, 0xe1, 0x31, 0xda, 0xc6, 0x09, 0xe8, 0x29, 0x88, 0x9a, 0x40, 0x2c,
	0x33, 0x16, 0x9f, 0x11, 0xb3, 0x5d, 0x34, 0x2a, 0x9c, 0x1d, 0x81, 0xd3, 0xb3, 0x1e, 0x5c, 0x8b,
	0x63, 0xbf, 0xce, 0x75, 0xfd, 0x26, 0xc5, 0xfc, 0x19, 0x41, 0x5d, 0x3e, 0x09, 0x4a, 0x61, 0xf2,
	0x5c, 0x2e, 0x79, 0x2b, 0xcc, 0x2b, 0x24, 0x62, 0x3d, 0x11, 0xe0, 0x8f, 0xcc, 0xcf, 0xdf, 0x0a,
	0xdc, 0x96, 0xe3, 0xf1, 0x18, 0x6d, 0xef, 0x3e, 0x82, 0x0d, 0x3f, 0x9a, 0x75, 0x99, 0x4f, 0x4e,
	0x49, 0xd2, 0x55, 0xbf, 0x2b, 0xf9, 0xff, 0x4b, 0xca, 0x67, 0xb7, 0x5d, 0xd2, 0xef, 0xf3, 0x94,
	0xc2, 0x73, 0x74, 0xbc, 0x2c, 0xb8, 0x3c, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xa1, 0x9b,
	0x5c, 0xfe, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CassandraBackupClient is the client API for CassandraBackup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CassandraBackupClient interface {
	ShowClusters(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterListingResponse, error)
	ListNodes(ctx context.Context, in *NodeListingRequest, opts ...grpc.CallOption) (*NodeListingResponse, error)
	ListBackups(ctx context.Context, in *BackupListingRequest, opts ...grpc.CallOption) (*BackupListingResponse, error)
	TakeBackup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error)
	TakeRestore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*RestoreResponse, error)
	UpdateStatus(ctx context.Context, in *StatusUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type cassandraBackupClient struct {
	cc *grpc.ClientConn
}

func NewCassandraBackupClient(cc *grpc.ClientConn) CassandraBackupClient {
	return &cassandraBackupClient{cc}
}

func (c *cassandraBackupClient) ShowClusters(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterListingResponse, error) {
	out := new(ClusterListingResponse)
	err := c.cc.Invoke(ctx, "/rpc.CassandraBackup/ShowClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cassandraBackupClient) ListNodes(ctx context.Context, in *NodeListingRequest, opts ...grpc.CallOption) (*NodeListingResponse, error) {
	out := new(NodeListingResponse)
	err := c.cc.Invoke(ctx, "/rpc.CassandraBackup/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cassandraBackupClient) ListBackups(ctx context.Context, in *BackupListingRequest, opts ...grpc.CallOption) (*BackupListingResponse, error) {
	out := new(BackupListingResponse)
	err := c.cc.Invoke(ctx, "/rpc.CassandraBackup/ListBackups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cassandraBackupClient) TakeBackup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error) {
	out := new(BackupResponse)
	err := c.cc.Invoke(ctx, "/rpc.CassandraBackup/TakeBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cassandraBackupClient) TakeRestore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*RestoreResponse, error) {
	out := new(RestoreResponse)
	err := c.cc.Invoke(ctx, "/rpc.CassandraBackup/TakeRestore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cassandraBackupClient) UpdateStatus(ctx context.Context, in *StatusUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.CassandraBackup/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CassandraBackupServer is the server API for CassandraBackup service.
type CassandraBackupServer interface {
	ShowClusters(context.Context, *empty.Empty) (*ClusterListingResponse, error)
	ListNodes(context.Context, *NodeListingRequest) (*NodeListingResponse, error)
	ListBackups(context.Context, *BackupListingRequest) (*BackupListingResponse, error)
	TakeBackup(context.Context, *BackupRequest) (*BackupResponse, error)
	TakeRestore(context.Context, *RestoreRequest) (*RestoreResponse, error)
	UpdateStatus(context.Context, *StatusUpdateRequest) (*empty.Empty, error)
}

// UnimplementedCassandraBackupServer can be embedded to have forward compatible implementations.
type UnimplementedCassandraBackupServer struct {
}

func (*UnimplementedCassandraBackupServer) ShowClusters(ctx context.Context, req *empty.Empty) (*ClusterListingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowClusters not implemented")
}
func (*UnimplementedCassandraBackupServer) ListNodes(ctx context.Context, req *NodeListingRequest) (*NodeListingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodes not implemented")
}
func (*UnimplementedCassandraBackupServer) ListBackups(ctx context.Context, req *BackupListingRequest) (*BackupListingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBackups not implemented")
}
func (*UnimplementedCassandraBackupServer) TakeBackup(ctx context.Context, req *BackupRequest) (*BackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TakeBackup not implemented")
}
func (*UnimplementedCassandraBackupServer) TakeRestore(ctx context.Context, req *RestoreRequest) (*RestoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TakeRestore not implemented")
}
func (*UnimplementedCassandraBackupServer) UpdateStatus(ctx context.Context, req *StatusUpdateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatus not implemented")
}

func RegisterCassandraBackupServer(s *grpc.Server, srv CassandraBackupServer) {
	s.RegisterService(&_CassandraBackup_serviceDesc, srv)
}

func _CassandraBackup_ShowClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CassandraBackupServer).ShowClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.CassandraBackup/ShowClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CassandraBackupServer).ShowClusters(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CassandraBackup_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeListingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CassandraBackupServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.CassandraBackup/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CassandraBackupServer).ListNodes(ctx, req.(*NodeListingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CassandraBackup_ListBackups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupListingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CassandraBackupServer).ListBackups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.CassandraBackup/ListBackups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CassandraBackupServer).ListBackups(ctx, req.(*BackupListingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CassandraBackup_TakeBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CassandraBackupServer).TakeBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.CassandraBackup/TakeBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CassandraBackupServer).TakeBackup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CassandraBackup_TakeRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CassandraBackupServer).TakeRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.CassandraBackup/TakeRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CassandraBackupServer).TakeRestore(ctx, req.(*RestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CassandraBackup_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CassandraBackupServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.CassandraBackup/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CassandraBackupServer).UpdateStatus(ctx, req.(*StatusUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CassandraBackup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.CassandraBackup",
	HandlerType: (*CassandraBackupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ShowClusters",
			Handler:    _CassandraBackup_ShowClusters_Handler,
		},
		{
			MethodName: "ListNodes",
			Handler:    _CassandraBackup_ListNodes_Handler,
		},
		{
			MethodName: "ListBackups",
			Handler:    _CassandraBackup_ListBackups_Handler,
		},
		{
			MethodName: "TakeBackup",
			Handler:    _CassandraBackup_TakeBackup_Handler,
		},
		{
			MethodName: "TakeRestore",
			Handler:    _CassandraBackup_TakeRestore_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _CassandraBackup_UpdateStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/main/proto/cassandra-backup.proto",
}
